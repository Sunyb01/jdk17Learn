<?xml version="1.0" encoding="UTF-8" ?><configuration scan="true" scanPeriod="1 seconds">    <!-- 彩色日志格式 -->    <property name="CONSOLE_LOG_PATTERN"              value="%black(控制台-) %red(%d{yyyy-MM-dd HH:mm:ss}) %highlight(%-5level) %green([%24thread]) %yellow(%logger{64}) : %cyan(%msg%n)"/>    <property name="LOG_HOME" value="logs"/>    <property name="asyncMaxQueueSize" value="512"/>    <property name="default_log_format" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%24thread] %logger{36} : %msg%n" />    <!-- Console 输出设置 -->    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">        <encoder>            <pattern>${CONSOLE_LOG_PATTERN}</pattern>            <charset>utf8</charset>        </encoder>    </appender>    <!--  STDOUT异步日志  -->    <appender name="ASYNC_STDOUT" class="ch.qos.logback.classic.AsyncAppender">        <!--   不丢失日志, 默认值;如果队列的80%已满, 则会丢弃TRACT DEBUG INFO     -->        <discardingThreshold>0</discardingThreshold>        <!--  默认的队列深度 256      -->        <queueSize>256</queueSize>        <!-- 新增这行为了打印栈堆信息 -->        <includeCallerData>true</includeCallerData>        <!--  附加的 appender, 只能包含一个     -->        <appender-ref ref = "STDOUT" />    </appender>    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">        <File>${LOG_HOME}/info/pangu-info.log</File>        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">            <FileNamePattern>${LOG_HOME}/info/pangu-info.%d{yyyy-MM-dd}.%i.log</FileNamePattern>            <!--日志文件保留天数-->            <MaxHistory>30</MaxHistory>            <maxFileSize>4MB</maxFileSize>            <totalSizeCap>1000MB</totalSizeCap>        </rollingPolicy>        <!--设置后会过滤-->        <filter class="ch.qos.logback.classic.filter.LevelFilter">            <level>INFO</level>            <onMatch>ACCEPT</onMatch>            <onMismatch>DENY</onMismatch>        </filter>        <encoder class = "ch.qos.logback.classic.encoder.PatternLayoutEncoder">            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->            <pattern>${default_log_format}</pattern>        </encoder>    </appender>    <!--  INFO异步日志  -->    <appender name="ASYNC_INFO_FILE" class="ch.qos.logback.classic.AsyncAppender">        <!--   不丢失日志, 默认值;如果队列的80%已满, 则会丢弃TRACT DEBUG INFO     -->        <discardingThreshold>0</discardingThreshold>        <!--  默认的队列深度 256      -->        <queueSize>${asyncMaxQueueSize}</queueSize>        <!-- 新增这行为了打印栈堆信息 -->        <includeCallerData>true</includeCallerData>        <!--  附加的 appender, 只能包含一个     -->        <appender-ref ref = "INFO_FILE" />    </appender>    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">        <File>${LOG_HOME}/error/pangu-error.log</File>        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">            <FileNamePattern>${LOG_HOME}/error/pangu-error.%d{yyyy-MM-dd}.%i.log</FileNamePattern>            <!--日志文件保留天数-->            <MaxHistory>30</MaxHistory>            <maxFileSize>4MB</maxFileSize>            <totalSizeCap>1000MB</totalSizeCap>        </rollingPolicy>        <filter class="ch.qos.logback.classic.filter.LevelFilter">            <level>ERROR</level>            <onMatch>ACCEPT</onMatch>            <onMismatch>DENY</onMismatch>        </filter>        <encoder class = "ch.qos.logback.classic.encoder.PatternLayoutEncoder">            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->            <pattern>${default_log_format}</pattern>        </encoder>    </appender>    <!--  ERROR异步日志  -->    <appender name="ASYNC_ERROR_FILE" class="ch.qos.logback.classic.AsyncAppender">        <!--   不丢失日志, 默认值;如果队列的80%已满, 则会丢弃TRACT DEBUG INFO     -->        <discardingThreshold>0</discardingThreshold>        <!--  默认的队列深度 256      -->        <queueSize>${asyncMaxQueueSize}</queueSize>        <!-- 新增这行为了打印栈堆信息 -->        <includeCallerData>true</includeCallerData>        <!--  附加的 appender, 只能包含一个     -->        <appender-ref ref = "ERROR_FILE" />    </appender>    <!-- 设置Spring&Hibernate日志输出级别 -->    <logger name="org.springframework" level="WARN"/>    <!-- 从高到地低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL -->    <root level="info">        <appender-ref ref="ASYNC_STDOUT"/>        <appender-ref ref="ASYNC_INFO_FILE"/>        <appender-ref ref="ASYNC_ERROR_FILE"/>    </root></configuration>